# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    typesense_key: "%env(TYPESENSE_KEY)%"
    typesense_host: "%env(TYPESENSE_HOST)%"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Http\Controller\:
        resource: '../src/Http/Controller'
        tags: ['controller.service_arguments']
    
    App\Http\Admin\Controller\:
        resource: '../src/Http/Admin/Controller'
        tags: ['controller.service_arguments']
    
    App\Domain\Auth\:
        resource: '../src/Domain/Auth'
        tags: ['doctrine.repository_service']

    App\Http\Twig\ViteAssetExtension:
        arguments:
            $isDev: '%env(VITE_DEV)%'
            $manifest: '%kernel.project_dir%/public/assets/manifest.json'

    App\Infrastructure\Search\IndexerInterface:
        class: App\Infrastructure\Search\Typesense\TypesenseIndexer

    App\Infrastructure\Search\Typesense\TypesenseClient:
        arguments: 
            $host: '%typesense_host%'
            $apiKey: '%typesense_key%'

    App\Infrastructure\Search\SearchInterface:
        class: App\Infrastructure\Search\Typesense\TypesenseSearch
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
